apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: flask-app
  namespace: flask-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      imagePullSecrets:
        - name: lesson4-secret
      containers:
      - name: flask-app
        image: public.ecr.aws/q2y0f5j6/cloudexperts_yidgar/flask-app:1.0
        imagePullPolicy: Always
        # ForPRIVATE , USe
        #image: 148761662110.dkr.ecr.us-east-1.amazonaws.com/cloudexperts/falsk-app
        volumeMounts:
          - mountPath: "/flask-data"  # this is the mount in the pod
            name: flask-storage
        env:
        - name: BASE_DIR
          value: "/flask-data"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: flask-config
              key: DB_HOST
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: flask-config
              key: DB_NAME
        - name: APP_ENV
          valueFrom:
            configMapKeyRef:
              name: flask-config
              key: APP_ENV
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: flask-config
              key: LOG_LEVEL
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: flask-secret
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: flask-secret
              key: DB_PASSWORD
        ports:
        - containerPort: 5000
      volumes:
        - name: flask-storage
          persistentVolumeClaim:
            claimName: flask-pvc
---

apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: flask-app
spec:
  selector:
    app: flask-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: ClusterIP